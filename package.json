{
  "name": "discord-ai-moderator",
  "version": "2.0.0",
  "description": "Open source AI-powered Discord moderation bot with enterprise-grade security, GDPR compliance, and real-time threat monitoring",
  "main": "src/index.js",
  "scripts": {
    "start": "node src/index.js",
    "dev": "NODE_ENV=development nodemon src/index.js",
    "cluster": "NODE_ENV=production ENABLE_CLUSTERING=true node src/index.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:integration": "jest --testPathPattern=integration",
    "test:security": "npm audit && snyk test",
    "test:all": "npm run test && npm run test:security",
    "lint": "eslint src/ scripts/ --ext .js",
    "lint:fix": "eslint src/ scripts/ --ext .js --fix",
    "format": "prettier --write \"src/**/*.js\" \"scripts/**/*.js\" \"*.md\"",
    "format:check": "prettier --check \"src/**/*.js\" \"scripts/**/*.js\" \"*.md\"",
    "security:audit": "npm audit --audit-level moderate",
    "security:update": "npm update && npm audit fix",
    "validate": "npm run lint && npm run format:check && npm run test && npm run test:security",
    "build": "echo 'No build step required for Node.js application'",
    "docker:build": "docker build -t discord-ai-moderator:latest .",
    "docker:run": "docker run -d --name discord-ai-moderator --env-file .env -p 3000:3000 -p 8080:8080 discord-ai-moderator:latest",
    "docker:stop": "docker stop discord-ai-moderator && docker rm discord-ai-moderator",
    "docker:logs": "docker logs -f discord-ai-moderator",
    "compose:up": "docker-compose up -d",
    "compose:down": "docker-compose down",
    "compose:logs": "docker-compose logs -f",
    "backup:data": "node scripts/backup.js",
    "restore:data": "node scripts/restore.js",
    "generate:keys": "node scripts/generate-keys.js",
    "setup": "node scripts/setup.js",
    "setup:complete": "npm install && npm run generate:keys && npm run validate",
    "clean": "rm -rf node_modules package-lock.json && npm install",
    "update:deps": "npx npm-check-updates -u && npm install",
    "prestart": "npm run validate",
    "postinstall": "echo 'Installation complete! Run npm run setup to configure the bot.'"
  },
  "keywords": [
    "discord",
    "discord-bot",
    "moderation",
    "ai",
    "artificial-intelligence",
    "anthropic",
    "claude",
    "openrouter",
    "security",
    "privacy",
    "gdpr",
    "compliance",
    "real-time-monitoring",
    "threat-detection",
    "open-source",
    "nodejs",
    "mongodb",
    "redis",
    "enterprise",
    "scalable"
  ],
  "author": {
    "name": "Your Name",
    "email": "your.email@example.com",
    "url": "https://github.com/yourusername"
  },
  "contributors": [
    {
      "name": "Your Name",
      "email": "your.email@example.com",
      "url": "https://github.com/yourusername"
    }
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yourusername/discord-ai-moderator.git"
  },
  "bugs": {
    "url": "https://github.com/yourusername/discord-ai-moderator/issues",
    "email": "your.email@example.com"
  },
  "homepage": "https://github.com/yourusername/discord-ai-moderator#readme",
  "documentation": "https://github.com/yourusername/discord-ai-moderator/wiki",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "os": [
    "linux",
    "darwin",
    "win32"
  ],
  "cpu": [
    "x64",
    "arm64"
  ],
  "files": [
    "src/**/*",
    "scripts/**/*",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    ".env.example"
  ],
  "dependencies": {
    "@anthropic-ai/sdk": "^0.24.3",
    "bcrypt": "^5.1.1",
    "cors": "^2.8.5",
    "discord.js": "^14.13.0",
    "dotenv": "^16.4.5",
    "express": "^4.18.2",
    "express-mongo-sanitize": "^2.2.0",
    "express-rate-limit": "^7.1.5",
    "express-slow-down": "^2.0.1",
    "express-validator": "^7.0.1",
    "helmet": "^7.1.0",
    "ioredis": "^5.3.2",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.0.3",
    "node-cache": "^5.1.2",
    "node-fetch": "^3.3.2",
    "validator": "^13.11.0",
    "winston": "^3.11.0",
    "ws": "^8.14.2"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.2",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/node": "^20.8.9",
    "@types/supertest": "^2.0.16",
    "@types/validator": "^13.11.7",
    "@types/ws": "^8.5.10",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-jest": "^27.6.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-security": "^1.7.1",
    "jest": "^29.7.0",
    "nodemon": "^3.0.1",
    "npm-check-updates": "^16.14.11",
    "prettier": "^3.1.0",
    "snyk": "^1.1248.0",
    "supertest": "^6.3.3"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8",
    "utf-8-validate": "^6.0.3"
  },
  "peerDependencies": {
    "redis": "^4.6.0"
  },
  "peerDependenciesMeta": {
    "redis": {
      "optional": true
    }
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "src/**/*.js",
      "!src/**/*.test.js",
      "!src/**/*.spec.js",
      "!src/test/**/*",
      "!src/index.js"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "coverageReporters": [
      "text",
      "text-summary",
      "lcov",
      "html",
      "json"
    ],
    "testMatch": [
      "**/__tests__/**/*.js",
      "**/tests/**/*.js",
      "**/?(*.)+(spec|test).js"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/dist/",
      "/build/"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/src/test/setup.js"
    ],
    "testTimeout": 30000,
    "verbose": true
  },
  "eslintConfig": {
    "env": {
      "node": true,
      "es2022": true,
      "jest": true
    },
    "extends": [
      "eslint:recommended",
      "plugin:node/recommended",
      "plugin:security/recommended",
      "plugin:jest/recommended",
      "prettier"
    ],
    "plugins": [
      "security",
      "jest"
    ],
    "rules": {
      "no-console": "warn",
      "no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_"
        }
      ],
      "prefer-const": "error",
      "no-var": "error",
      "no-process-exit": "off",
      "security/detect-object-injection": "error",
      "security/detect-non-literal-regexp": "error",
      "security/detect-unsafe-regex": "error",
      "security/detect-buffer-noassert": "error",
      "security/detect-eval-with-expression": "error",
      "security/detect-no-csrf-before-method-override": "error",
      "security/detect-possible-timing-attacks": "warn",
      "jest/expect-expect": "error",
      "jest/no-disabled-tests": "warn",
      "jest/no-focused-tests": "error",
      "jest/prefer-to-have-length": "warn"
    },
    "parserOptions": {
      "ecmaVersion": 2022,
      "sourceType": "module"
    },
    "overrides": [
      {
        "files": [
          "**/*.test.js",
          "**/*.spec.js"
        ],
        "env": {
          "jest": true
        },
        "rules": {
          "no-console": "off"
        }
      }
    ]
  },
  "prettier": {
    "semi": true,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "es5",
    "printWidth": 100,
    "bracketSpacing": true,
    "arrowParens": "always",
    "endOfLine": "lf",
    "insertPragma": false,
    "proseWrap": "preserve",
    "quoteProps": "as-needed",
    "requirePragma": false,
    "useTabs": false
  },
  "snyk": true,
  "funding": [
    {
      "type": "github",
      "url": "https://github.com/sponsors/yourusername"
    },
    {
      "type": "opencollective",
      "url": "https://opencollective.com/discord-ai-moderator"
    }
  ],
  "security": {
    "advisories": {
      "ignore": []
    }
  },
  "nodemonConfig": {
    "watch": [
      "src/",
      "scripts/",
      ".env"
    ],
    "ext": "js,json",
    "ignore": [
      "src/**/*.test.js",
      "src/**/*.spec.js",
      "node_modules/",
      "logs/",
      "coverage/"
    ],
    "env": {
      "NODE_ENV": "development",
      "LOG_LEVEL": "debug"
    },
    "delay": 1000
  },
  "docker": {
    "image": "node:18-alpine",
    "ports": [
      "3000:3000",
      "8080:8080"
    ],
    "volumes": [
      "./data:/app/data",
      "./logs:/app/logs"
    ],
    "environment": [
      "NODE_ENV=production"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "browserslist": [
    "node >= 18"
  ],
  "publishConfig": {
    "registry": "https://registry.npmjs.org/",
    "access": "public"
  }
}
